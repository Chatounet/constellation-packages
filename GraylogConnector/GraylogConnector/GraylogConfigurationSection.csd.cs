//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GraylogConnector
{
    
    
    /// <summary>
    /// The GraylogConfiguration Configuration Section.
    /// </summary>
    public partial class GraylogConfiguration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the GraylogConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string GraylogConfigurationSectionName = "graylogConfiguration";
        
        /// <summary>
        /// Gets the GraylogConfiguration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::GraylogConnector.GraylogConfiguration Instance
        {
            get
            {
                return ((global::GraylogConnector.GraylogConfiguration)(global::System.Configuration.ConfigurationManager.GetSection(global::GraylogConnector.GraylogConfiguration.GraylogConfigurationSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GraylogConfiguration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::GraylogConnector.GraylogConfiguration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region SendPackageLogs Property
        /// <summary>
        /// The XML name of the <see cref="SendPackageLogs"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SendPackageLogsPropertyName = "sendPackageLogs";
        
        /// <summary>
        /// Gets or sets the SendPackageLogs.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SendPackageLogs.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GraylogConfiguration.SendPackageLogsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool SendPackageLogs
        {
            get
            {
                return ((bool)(base[global::GraylogConnector.GraylogConfiguration.SendPackageLogsPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GraylogConfiguration.SendPackageLogsPropertyName] = value;
            }
        }
        #endregion
        
        #region SendPackageStates Property
        /// <summary>
        /// The XML name of the <see cref="SendPackageStates"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SendPackageStatesPropertyName = "sendPackageStates";
        
        /// <summary>
        /// Gets or sets the SendPackageStates.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SendPackageStates.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GraylogConfiguration.SendPackageStatesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool SendPackageStates
        {
            get
            {
                return ((bool)(base[global::GraylogConnector.GraylogConfiguration.SendPackageStatesPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GraylogConfiguration.SendPackageStatesPropertyName] = value;
            }
        }
        #endregion
        
        #region SendSentinelUpdates Property
        /// <summary>
        /// The XML name of the <see cref="SendSentinelUpdates"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SendSentinelUpdatesPropertyName = "sendSentinelUpdates";
        
        /// <summary>
        /// Gets or sets the SendSentinelUpdates.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SendSentinelUpdates.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GraylogConfiguration.SendSentinelUpdatesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool SendSentinelUpdates
        {
            get
            {
                return ((bool)(base[global::GraylogConnector.GraylogConfiguration.SendSentinelUpdatesPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GraylogConfiguration.SendSentinelUpdatesPropertyName] = value;
            }
        }
        #endregion
        
        #region Subscriptions Property
        /// <summary>
        /// The XML name of the <see cref="Subscriptions"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SubscriptionsPropertyName = "subscriptions";
        
        /// <summary>
        /// Gets or sets the Subscriptions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Subscriptions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GraylogConfiguration.SubscriptionsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GraylogConnector.SubscriptionCollection Subscriptions
        {
            get
            {
                return ((global::GraylogConnector.SubscriptionCollection)(base[global::GraylogConnector.GraylogConfiguration.SubscriptionsPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GraylogConfiguration.SubscriptionsPropertyName] = value;
            }
        }
        #endregion
        
        #region GelfOutputs Property
        /// <summary>
        /// The XML name of the <see cref="GelfOutputs"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string GelfOutputsPropertyName = "outputs";
        
        /// <summary>
        /// Gets or sets the GelfOutputs.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The GelfOutputs.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GraylogConfiguration.GelfOutputsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GraylogConnector.GelfOutputCollection GelfOutputs
        {
            get
            {
                return ((global::GraylogConnector.GelfOutputCollection)(base[global::GraylogConnector.GraylogConfiguration.GelfOutputsPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GraylogConfiguration.GelfOutputsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GraylogConnector
{
    
    
    /// <summary>
    /// A collection of Subscription instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::GraylogConnector.Subscription), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::GraylogConnector.SubscriptionCollection.SubscriptionPropertyName)]
    public partial class SubscriptionCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::GraylogConnector.Subscription"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SubscriptionPropertyName = "subscription";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::GraylogConnector.SubscriptionCollection.SubscriptionPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::GraylogConnector.SubscriptionCollection.SubscriptionPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return element.GetHashCode();
        }
        
        /// <summary>
        /// Creates a new <see cref="global::GraylogConnector.Subscription"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::GraylogConnector.Subscription"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::GraylogConnector.Subscription();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.Subscription"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GraylogConnector.Subscription"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.Subscription this[int index]
        {
            get
            {
                return ((global::GraylogConnector.Subscription)(base.BaseGet(index)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::GraylogConnector.Subscription"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="subscription">The <see cref="global::GraylogConnector.Subscription"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::GraylogConnector.Subscription subscription)
        {
            base.BaseAdd(subscription);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::GraylogConnector.Subscription"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="subscription">The <see cref="global::GraylogConnector.Subscription"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::GraylogConnector.Subscription subscription)
        {
            base.BaseRemove(this.GetElementKey(subscription));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.Subscription"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GraylogConnector.Subscription"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.Subscription GetItemAt(int index)
        {
            return ((global::GraylogConnector.Subscription)(base.BaseGet(index)));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace GraylogConnector
{
    
    
    /// <summary>
    /// The Subscription Configuration Element.
    /// </summary>
    public partial class Subscription : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Sentinel Property
        /// <summary>
        /// The XML name of the <see cref="Sentinel"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SentinelPropertyName = "sentinel";
        
        /// <summary>
        /// Gets or sets the Sentinel.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Sentinel.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.Subscription.SentinelPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="*")]
        public virtual string Sentinel
        {
            get
            {
                return ((string)(base[global::GraylogConnector.Subscription.SentinelPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.Subscription.SentinelPropertyName] = value;
            }
        }
        #endregion
        
        #region Package Property
        /// <summary>
        /// The XML name of the <see cref="Package"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PackagePropertyName = "package";
        
        /// <summary>
        /// Gets or sets the Package.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Package.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.Subscription.PackagePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="*")]
        public virtual string Package
        {
            get
            {
                return ((string)(base[global::GraylogConnector.Subscription.PackagePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.Subscription.PackagePropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.Subscription.NamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="*")]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::GraylogConnector.Subscription.NamePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.Subscription.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.Subscription.TypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="*")]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::GraylogConnector.Subscription.TypePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.Subscription.TypePropertyName] = value;
            }
        }
        #endregion
        
        #region Enable Property
        /// <summary>
        /// The XML name of the <see cref="Enable"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string EnablePropertyName = "enable";
        
        /// <summary>
        /// Gets or sets the Enable.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Enable.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.Subscription.EnablePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool Enable
        {
            get
            {
                return ((bool)(base[global::GraylogConnector.Subscription.EnablePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.Subscription.EnablePropertyName] = value;
            }
        }
        #endregion
        
        #region Aggregation Property
        /// <summary>
        /// The XML name of the <see cref="Aggregation"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AggregationPropertyName = "aggregation";
        
        /// <summary>
        /// Gets or sets the Aggregation.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Aggregation.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.Subscription.AggregationPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GraylogConnector.AggregatePropertyCollection Aggregation
        {
            get
            {
                return ((global::GraylogConnector.AggregatePropertyCollection)(base[global::GraylogConnector.Subscription.AggregationPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.Subscription.AggregationPropertyName] = value;
            }
        }
        #endregion
        
        #region Exclusions Property
        /// <summary>
        /// The XML name of the <see cref="Exclusions"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ExclusionsPropertyName = "exclusions";
        
        /// <summary>
        /// Gets or sets the Exclusions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Exclusions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.Subscription.ExclusionsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GraylogConnector.ExclusionCollection Exclusions
        {
            get
            {
                return ((global::GraylogConnector.ExclusionCollection)(base[global::GraylogConnector.Subscription.ExclusionsPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.Subscription.ExclusionsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GraylogConnector
{
    
    
    /// <summary>
    /// The GelfOutputElement Configuration Element.
    /// </summary>
    public partial class GelfOutputElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Host Property
        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HostPropertyName = "host";
        
        /// <summary>
        /// Gets or sets the Host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Host.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GelfOutputElement.HostPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Host
        {
            get
            {
                return ((string)(base[global::GraylogConnector.GelfOutputElement.HostPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GelfOutputElement.HostPropertyName] = value;
            }
        }
        #endregion
        
        #region Port Property
        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PortPropertyName = "port";
        
        /// <summary>
        /// Gets or sets the Port.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Port.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GelfOutputElement.PortPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::GraylogConnector.GelfOutputElement.PortPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GelfOutputElement.PortPropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GelfOutputElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::GraylogConnector.GelfOutputElement.NamePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GelfOutputElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Protocol Property
        /// <summary>
        /// The XML name of the <see cref="Protocol"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ProtocolPropertyName = "protocol";
        
        /// <summary>
        /// Gets or sets the Protocol.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Protocol.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GelfOutputElement.ProtocolPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=GelfOutputProtocol.Udp)]
        public virtual global::GraylogConnector.GelfOutputProtocol Protocol
        {
            get
            {
                return ((global::GraylogConnector.GelfOutputProtocol)(base[global::GraylogConnector.GelfOutputElement.ProtocolPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GelfOutputElement.ProtocolPropertyName] = value;
            }
        }
        #endregion
        
        #region Enable Property
        /// <summary>
        /// The XML name of the <see cref="Enable"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string EnablePropertyName = "enable";
        
        /// <summary>
        /// Gets or sets the Enable.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Enable.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.GelfOutputElement.EnablePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool Enable
        {
            get
            {
                return ((bool)(base[global::GraylogConnector.GelfOutputElement.EnablePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.GelfOutputElement.EnablePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GraylogConnector
{
    
    
    /// <summary>
    /// A collection of GelfOutputElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::GraylogConnector.GelfOutputElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::GraylogConnector.GelfOutputCollection.GelfOutputElementPropertyName)]
    public partial class GelfOutputCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::GraylogConnector.GelfOutputElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string GelfOutputElementPropertyName = "gelfOutput";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::GraylogConnector.GelfOutputCollection.GelfOutputElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::GraylogConnector.GelfOutputCollection.GelfOutputElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::GraylogConnector.GelfOutputElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::GraylogConnector.GelfOutputElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::GraylogConnector.GelfOutputElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::GraylogConnector.GelfOutputElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.GelfOutputElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GraylogConnector.GelfOutputElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.GelfOutputElement this[int index]
        {
            get
            {
                return ((global::GraylogConnector.GelfOutputElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.GelfOutputElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::GraylogConnector.GelfOutputElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.GelfOutputElement this[object name]
        {
            get
            {
                return ((global::GraylogConnector.GelfOutputElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::GraylogConnector.GelfOutputElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="gelfOutput">The <see cref="global::GraylogConnector.GelfOutputElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::GraylogConnector.GelfOutputElement gelfOutput)
        {
            base.BaseAdd(gelfOutput);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::GraylogConnector.GelfOutputElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="gelfOutput">The <see cref="global::GraylogConnector.GelfOutputElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::GraylogConnector.GelfOutputElement gelfOutput)
        {
            base.BaseRemove(this.GetElementKey(gelfOutput));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.GelfOutputElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GraylogConnector.GelfOutputElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.GelfOutputElement GetItemAt(int index)
        {
            return ((global::GraylogConnector.GelfOutputElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.GelfOutputElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::GraylogConnector.GelfOutputElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.GelfOutputElement GetItemByKey(string name)
        {
            return ((global::GraylogConnector.GelfOutputElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace GraylogConnector
{
    
    
    /// <summary>
    /// The AggregatePropertyElement Configuration Element.
    /// </summary>
    public partial class AggregatePropertyElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region PropertyName Property
        /// <summary>
        /// The XML name of the <see cref="PropertyName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PropertyNamePropertyName = "propertyName";
        
        /// <summary>
        /// Gets or sets the PropertyName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The PropertyName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.AggregatePropertyElement.PropertyNamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string PropertyName
        {
            get
            {
                return ((string)(base[global::GraylogConnector.AggregatePropertyElement.PropertyNamePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.AggregatePropertyElement.PropertyNamePropertyName] = value;
            }
        }
        #endregion
        
        #region IncludeAggregateInfo Property
        /// <summary>
        /// The XML name of the <see cref="IncludeAggregateInfo"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string IncludeAggregateInfoPropertyName = "includeAggregateInfo";
        
        /// <summary>
        /// Gets or sets the IncludeAggregateInfo.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The IncludeAggregateInfo.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.AggregatePropertyElement.IncludeAggregateInfoPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool IncludeAggregateInfo
        {
            get
            {
                return ((bool)(base[global::GraylogConnector.AggregatePropertyElement.IncludeAggregateInfoPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.AggregatePropertyElement.IncludeAggregateInfoPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GraylogConnector
{
    
    
    /// <summary>
    /// A collection of AggregatePropertyElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::GraylogConnector.AggregatePropertyElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::GraylogConnector.AggregatePropertyCollection.AggregatePropertyElementPropertyName)]
    public partial class AggregatePropertyCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::GraylogConnector.AggregatePropertyElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AggregatePropertyElementPropertyName = "aggregateProperty";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::GraylogConnector.AggregatePropertyCollection.AggregatePropertyElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::GraylogConnector.AggregatePropertyCollection.AggregatePropertyElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::GraylogConnector.AggregatePropertyElement)(element)).PropertyName;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::GraylogConnector.AggregatePropertyElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::GraylogConnector.AggregatePropertyElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::GraylogConnector.AggregatePropertyElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.AggregatePropertyElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GraylogConnector.AggregatePropertyElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.AggregatePropertyElement this[int index]
        {
            get
            {
                return ((global::GraylogConnector.AggregatePropertyElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.AggregatePropertyElement"/> with the specified key.
        /// </summary>
        /// <param name="propertyName">The key of the <see cref="global::GraylogConnector.AggregatePropertyElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.AggregatePropertyElement this[object propertyName]
        {
            get
            {
                return ((global::GraylogConnector.AggregatePropertyElement)(base.BaseGet(propertyName)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::GraylogConnector.AggregatePropertyElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="aggregateProperty">The <see cref="global::GraylogConnector.AggregatePropertyElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::GraylogConnector.AggregatePropertyElement aggregateProperty)
        {
            base.BaseAdd(aggregateProperty);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::GraylogConnector.AggregatePropertyElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="aggregateProperty">The <see cref="global::GraylogConnector.AggregatePropertyElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::GraylogConnector.AggregatePropertyElement aggregateProperty)
        {
            base.BaseRemove(this.GetElementKey(aggregateProperty));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.AggregatePropertyElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GraylogConnector.AggregatePropertyElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.AggregatePropertyElement GetItemAt(int index)
        {
            return ((global::GraylogConnector.AggregatePropertyElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.AggregatePropertyElement"/> with the specified key.
        /// </summary>
        /// <param name="propertyName">The key of the <see cref="global::GraylogConnector.AggregatePropertyElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.AggregatePropertyElement GetItemByKey(string propertyName)
        {
            return ((global::GraylogConnector.AggregatePropertyElement)(base.BaseGet(((object)(propertyName)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Interval Property
        /// <summary>
        /// The XML name of the <see cref="Interval"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string IntervalPropertyName = "interval";
        
        /// <summary>
        /// Gets or sets the Interval.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Interval.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.AggregatePropertyCollection.IntervalPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=30)]
        public virtual int Interval
        {
            get
            {
                return ((int)(base[global::GraylogConnector.AggregatePropertyCollection.IntervalPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.AggregatePropertyCollection.IntervalPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GraylogConnector
{
    
    
    /// <summary>
    /// The ExclusionElement Configuration Element.
    /// </summary>
    public partial class ExclusionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Sentinel Property
        /// <summary>
        /// The XML name of the <see cref="Sentinel"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SentinelPropertyName = "sentinel";
        
        /// <summary>
        /// Gets or sets the Sentinel.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Sentinel.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.ExclusionElement.SentinelPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Sentinel
        {
            get
            {
                return ((string)(base[global::GraylogConnector.ExclusionElement.SentinelPropertyName]));
            }
            set
            {
                base[global::GraylogConnector.ExclusionElement.SentinelPropertyName] = value;
            }
        }
        #endregion
        
        #region Package Property
        /// <summary>
        /// The XML name of the <see cref="Package"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PackagePropertyName = "package";
        
        /// <summary>
        /// Gets or sets the Package.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Package.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.ExclusionElement.PackagePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Package
        {
            get
            {
                return ((string)(base[global::GraylogConnector.ExclusionElement.PackagePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.ExclusionElement.PackagePropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.ExclusionElement.NamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::GraylogConnector.ExclusionElement.NamePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.ExclusionElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GraylogConnector.ExclusionElement.TypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::GraylogConnector.ExclusionElement.TypePropertyName]));
            }
            set
            {
                base[global::GraylogConnector.ExclusionElement.TypePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GraylogConnector
{
    
    
    /// <summary>
    /// A collection of ExclusionElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::GraylogConnector.ExclusionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::GraylogConnector.ExclusionCollection.ExclusionElementPropertyName)]
    public partial class ExclusionCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::GraylogConnector.ExclusionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ExclusionElementPropertyName = "exclusion";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::GraylogConnector.ExclusionCollection.ExclusionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::GraylogConnector.ExclusionCollection.ExclusionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return element.GetHashCode();
        }
        
        /// <summary>
        /// Creates a new <see cref="global::GraylogConnector.ExclusionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::GraylogConnector.ExclusionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::GraylogConnector.ExclusionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.ExclusionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GraylogConnector.ExclusionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.ExclusionElement this[int index]
        {
            get
            {
                return ((global::GraylogConnector.ExclusionElement)(base.BaseGet(index)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::GraylogConnector.ExclusionElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="exclusion">The <see cref="global::GraylogConnector.ExclusionElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::GraylogConnector.ExclusionElement exclusion)
        {
            base.BaseAdd(exclusion);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::GraylogConnector.ExclusionElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="exclusion">The <see cref="global::GraylogConnector.ExclusionElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::GraylogConnector.ExclusionElement exclusion)
        {
            base.BaseRemove(this.GetElementKey(exclusion));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::GraylogConnector.ExclusionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GraylogConnector.ExclusionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::GraylogConnector.ExclusionElement GetItemAt(int index)
        {
            return ((global::GraylogConnector.ExclusionElement)(base.BaseGet(index)));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace GraylogConnector
{
    
    
    /// <summary>
    /// GelfOutputProtocol.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
    public enum GelfOutputProtocol
    {
        
        /// <summary>
        /// Udp.
        /// </summary>
        Udp,
        
        /// <summary>
        /// Tcp.
        /// </summary>
        Tcp,
    }
}
